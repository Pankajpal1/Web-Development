ejs-mate -> an npm package that allows us to add some useful functionlality.
layout -> allows us to define boilerplate and allows us to insert data inside it.


So, we only need to import partials, styles in one sheet

                    ADDING IMAGES
Make a request to Unsplash's API

                            FORM VALIDATION
Right now, we can submit an empty form and a campground will be created, how do we prevent that?
1. Use HTML5's "required" attribute, but it doesn't look good and isn't standardized across browsers
2. use bootstrap's form validation
        > set required on appropriate fields
        > set novalidate on form so that bootstrap can take the reins
        > add the javascript section in

If we get an async error, our entire application crashes. So we add error-handling mw and try-catch

                            SETTING UP ERROR CLASS
Made a basic class

Right now, if we directly send an empty POST request through postman, it will still make an empty campground.

                            ERROR PAGE
Setting up a simple EJS template, with the error's details.

                            JOI VALIDATION
Validating using JOI. We are doing client-side validation. But if we send a post request through postman and leave out
some data in, it will create a faulty campground. javascript validator called 'Joi'

In Joi, we make a schema and pass our data to it (req.body), and extract message from it and show it.

Why we are using Joi when we have Mongoose validation?
> https://stackoverflow.com/questions/60801039/do-i-need-to-use-hapi-joi-with-mongoose/60802635#60802635

Joi is not related to mongoose, it's just a template for a normal JavaScript object.

                        REVIEWS MODEL
Creating a reviews model

To make a review, we need to know which campground, so we include it's id
POST /campgrounds/:id/rev, one-to-many relationship with the campgrounds.
Adding a form to write a review.

Adding functionality to create reviews by creating a simple form and adding Joi validation. Then we just styled the reviews.
Now for deleting a review, we need the review id and the campground id to delete that id from the reviews[]

Google what the $pull operator does in MongoDB.

What happens when we delete a campground? We should delete all the reviews as well from the database

findByIdAndDelete() triggers findOneAndDelete() middleware. 